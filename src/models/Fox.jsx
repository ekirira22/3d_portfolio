/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: pxltiger (https://sketchfab.com/pxltiger)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/fox-39f97fe58f0b47ce80b6e02814001dd7
Title: Fox
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import foxScene from '../assets/3d/redfox.glb'

export default function Fox({ currentAnimation, speed=0.75, ...props}) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF(foxScene)
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    // console.log(actions)
    Object.values(actions).forEach((action) => action.stop())

    if(actions[currentAnimation]) {
      // Set the animation speed
      actions[currentAnimation].setEffectiveTimeScale(speed)
      // Play the action
      actions[currentAnimation].play()
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [actions, currentAnimation, speed])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="fbx_mergefbx" rotation={[Math.PI / 2, 0, 0]}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="fox" rotation={[-Math.PI / 2, 0, 0]} />
                <group name="FoxTransform" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="Object_6">
                    <primitive object={nodes._rootJoint} />
                    <skinnedMesh
                      name="Object_9"
                      geometry={nodes.Object_9.geometry}
                      material={materials['08_-_Default']}
                      skeleton={nodes.Object_9.skeleton}
                    />
                    <group name="Object_8" rotation={[-Math.PI / 2, 0, 0]} />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}